name: Voice Create Bot Publish
on:
  push:
    branches:
      - develop
jobs:
  version:
    runs-on: ubuntu-latest
    outputs:
      app_version: ${{ steps.semvers.outputs.patch }} # set the app_version to be the PATCH updated version
      tag: ${{ steps.semvers.outputs.v_patch }} # set the tag to be the PATCH updated version.
    env:
      GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
    steps:
    - uses: actions/checkout@v2.2.0
      with:
        fetch-depth: 0
    # Get the current tag
    - name: 'Get Previous tag'
      id: previoustag
      uses: "WyriHaximus/github-action-get-previous-tag@v1"
      with:
        fallback: 1.1.0 # Optional fallback tag to use when no tag can be found
    # calculate the next version
    - name: 'Get next minor version'
      id: semvers
      uses: "WyriHaximus/github-action-next-semvers@v1"
      with:
        version: ${{ steps.previoustag.outputs.tag }}
    - run: echo "app_version ${{ steps.semvers.outputs.patch }}"
  docker:
    runs-on: ubuntu-latest
    needs: version
    env:
      APP_VERSION: ${{ needs.version.outputs.app_version }}
      DISCORD_BOT_TOKEN: ${{ secrets.DISCORD_BOT_TOKEN }}
    steps:
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Build and Push
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        push: true
        tags: camalot/voice-create-bot-docker:latest,camalot/voice-create-bot-docker:${{ needs.version.outputs.app_version }}
  merge:
    runs-on: ubuntu-latest
    needs:
    - docker
    - version
    steps:

    - uses: actions/checkout@master
    - name: Merge develop -> master
      uses: devmasx/merge-branch@v1.3.1
      with:
        type: now
        from_branch: develop
        target_branch: master
        github_token: ${{ github.token }}
    # https://github.com/marketplace/actions/create-tag
    - name: Create Tag
      uses: negz/create-tag@v1
      with:
        version: ${{ needs.version.outputs.tag }}
        message: ''
        token: ${{ github.token }}
    - name: Create Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      env:
        GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
      with:
        body_path: CHANGELOG.txt
        name: "${{ needs.version.outputs.app_version }}"
