name: Voice Create Bot Publish
on:
  push:
    branches:
      - develop
jobs:
  version:
    runs-on: ubuntu-latest
    outputs:
      app_version: ${{ steps.semvers.outputs.patch }}
      tag: ${{ steps.semvers.outputs.v_patch }}
    env:
      GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
    steps:
    - uses: actions/checkout@v2.2.0
      with:
        fetch-depth: 0
    - name: 'Get Previous tag'
      id: previoustag
      uses: "WyriHaximus/github-action-get-previous-tag@v1"
      with:
        fallback: 1.1.0 # Optional fallback tag to use when no tag can be found
    - name: 'Get next minor version'
      id: semvers
      uses: "WyriHaximus/github-action-next-semvers@v1"
      with:
        version: ${{ steps.previoustag.outputs.tag }}
    - run: echo "app_version ${{ jobs.version.outputs.app_version }}"
  # xversion:
  #   runs-on: ubuntu-latest
  #   outputs:
  #     app_version: ${{ steps.semver.outputs.tag }}
  #     tag: ${{ steps.semver_release.outputs.tag }}
  #   env:
  #     GITHUB_TOKEN: ${{ github.token }}
  #   steps:
  #   - name: semver
  #     uses: K-Phoen/semver-release-action@master
  #     with:
  #       release_strategy: none
  #       tag_format: '%major%.%minor%.%patch%'
  #       release_branch: develop
  #   - name: semver_release
  #     uses: K-Phoen/semver-release-action@master
  #     with:
  #       release_strategy: release
  #       tag_format: 'v%major%.%minor%.%patch%'
  #       release_branch: develop
  # docker:
  #   runs-on: ubuntu-latest
  #   needs: version
  #   env:
  #     APP_VERSION: ${{ needs.version.outputs.app_version }}
  #     DISCORD_BOT_TOKEN: ${{ secrets.DISCORD_BOT_TOKEN }}
  #   steps:
  #   - name: Set up QEMU
  #     uses: docker/setup-qemu-action@v1
  #   - name: Set up Docker Buildx
  #     uses: docker/setup-buildx-action@v1
  #   - name: Login to DockerHub
  #     uses: docker/login-action@v1
  #     with:
  #       username: ${{ secrets.DOCKERHUB_USERNAME }}
  #       password: ${{ secrets.DOCKERHUB_TOKEN }}
  #   - name: Build and Push
  #     id: docker_build
  #     uses: docker/build-push-action@v2
  #     with:
  #       push: true
  #       tags: camalot/voice-create-bot-docker:latest,camalot/voice-create-bot-docker:${{ needs.version.outputs.app_version }}
  # merge:
  #   runs-on: ubuntu-latest
  #   needs: docker
  #   steps:
  #   - uses: actions/checkout@master
  #   - name: Merge develop -> master
  #     uses: devmasx/merge-branch@v1.3.1
  #     with:
  #       type: now
  #       from_branch: develop
  #       target_branch: master
  #       github_token: ${{ github.token }}
